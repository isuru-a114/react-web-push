{"map":"{\"version\":3,\"sources\":[\"/Users/malshahansini/Documents/kaisotre/sample-kaios-react/untitled folder/demo-webpush-react/src/App.js\",\"/Users/malshahansini/Documents/kaisotre/sample-kaios-react/untitled folder/demo-webpush-react/src/serviceWorker.js\",\"/Users/malshahansini/Documents/kaisotre/sample-kaios-react/untitled folder/demo-webpush-react/src/subscription.js\",\"/Users/malshahansini/Documents/kaisotre/sample-kaios-react/untitled folder/demo-webpush-react/src/index.js\",\"/Users/malshahansini/Documents/kaisotre/sample-kaios-react/untitled folder/demo-webpush-react/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/malshahansini/Documents/kaisotre/sample-kaios-react/untitled folder/demo-webpush-react/src/logo.svg\"],\"names\":[\"App\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"logo\",\"alt\",\"href\",\"target\",\"rel\",\"Component\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"state\",\"controller\",\"console\",\"log\",\"onUpdate\",\"onSuccess\",\"catch\",\"error\",\"convertedVapidKey\",\"base64String\",\"padding\",\"repeat\",\"length\",\"base64\",\"replace\",\"rawData\",\"atob\",\"outputArray\",\"Uint8Array\",\"i\",\"charCodeAt\",\"urlBase64ToUint8Array\",\"process\",\"sendSubscription\",\"subscription\",\"fetch\",\"concat\",\"method\",\"body\",\"JSON\",\"stringify\",\"headers\",\"Content-Type\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"URL\",\"origin\",\"addEventListener\",\"response\",\"contentType\",\"get\",\"status\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"pushManager\",\"getSubscription\",\"existedSubscription\",\"subscribe\",\"applicationServerKey\",\"userVisibleOnly\",\"newSubscription\",\"toJSON\",\"e\",\"Notification\",\"permission\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n          <p>\\n            Push notifications demo.\\n          </p>\\n          <a\\n            className=\\\"App-link\\\"\\n            href=\\\"https://reactjs.org\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noopener noreferrer\\\"\\n          >\\n            Learn React\\n          </a>\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if ('serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swFileName = process.env.NODE_ENV === 'production' ? 'service-worker.js' : 'custom-sw.js'\\n      const swUrl = `${process.env.PUBLIC_URL}/${swFileName}`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"const convertedVapidKey = urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY)\\n\\nfunction urlBase64ToUint8Array(base64String) {\\n  const padding = \\\"=\\\".repeat((4 - base64String.length % 4) % 4)\\n  // eslint-disable-next-line\\n  const base64 = (base64String + padding).replace(/\\\\-/g, \\\"+\\\").replace(/_/g, \\\"/\\\")\\n\\n  const rawData = window.atob(base64)\\n  const outputArray = new Uint8Array(rawData.length)\\n\\n  for (let i = 0; i < rawData.length; ++i) {\\n    outputArray[i] = rawData.charCodeAt(i)\\n  }\\n  return outputArray\\n}\\n\\nfunction sendSubscription(subscription) {\\n  return fetch(`${process.env.REACT_APP_API_URL}/notifications/subscribe`, {\\n    method: 'POST',\\n    body: JSON.stringify(subscription),\\n    headers: {\\n      'Content-Type': 'application/json'\\n    }\\n  })\\n}\\n\\nexport function subscribeUser() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(function(registration) {\\n      if (!registration.pushManager) {\\n        console.log('Push manager unavailable.')\\n        return\\n      }\\n\\n      registration.pushManager.getSubscription().then(function(existedSubscription) {\\n        if (existedSubscription === null) {\\n          console.log('No subscription detected, make a request.')\\n          registration.pushManager.subscribe({\\n            applicationServerKey: convertedVapidKey,\\n            userVisibleOnly: true,\\n          }).then(function(newSubscription) {\\n            console.log('New subscription added.', newSubscription.toJSON())\\n            sendSubscription(newSubscription)\\n          }).catch(function(e) {\\n            if (Notification.permission !== 'granted') {\\n              console.log('Permission was not granted.')\\n            } else {\\n              console.error('An error ocurred during the subscription process.', e)\\n            }\\n          })\\n        } else {\\n          console.log('New subscription added.', existedSubscription.toJSON())\\n          sendSubscription(existedSubscription)\\n        }\\n      })\\n    })\\n      .catch(function(e) {\\n        console.error('An error ocurred during Service Worker registration.', e)\\n      })\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport { subscribeUser } from './subscription';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.register();\\n\\nsubscribeUser()\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,n,o){},16:function(e,n,o){},17:function(e,n,o){\"use strict\";o.r(n);var t=o(0),r=o.n(t),i=o(2),a=o.n(i),c=(o(15),o(3)),s=o(4),l=o(7),u=o(5),d=o(8),f=o(6),p=o.n(f),g=(o(16),function(e){function n(){return Object(c.a)(this,n),Object(l.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(d.a)(n,e),Object(s.a)(n,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(\"img\",{src:p.a,className:\"App-logo\",alt:\"logo\"}),r.a.createElement(\"p\",null,\"Push notifications demo.\"),r.a.createElement(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Learn React\")))}}]),n}(t.Component)),h=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function v(e,n){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var o=e.installing;null!=o&&(o.onstatechange=function(){\"installed\"===o.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\"),n&&n.onUpdate&&n.onUpdate(e)):(console.log(\"Content is cached for offline use.\"),n&&n.onSuccess&&n.onSuccess(e)))})}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}var w=function(e){for(var n=\"=\".repeat((4-e.length%4)%4),o=(e+n).replace(/\\-/g,\"+\").replace(/_/g,\"/\"),t=window.atob(o),r=new Uint8Array(t.length),i=0;i<t.length;++i)r[i]=t.charCodeAt(i);return r}(\"BJIffLEbP_GL3xfOUFDssvuofSZPSvOsUHpxBteVfZKjbeXib13rQKq7ghB5pMsOfS41QsBZpPehfo-5N8CsHc0\");function b(e){return fetch(\"\".concat(\"https://trivia-api.eyepax.info\",\"/notifications/subscribe\"),{method:\"POST\",body:JSON.stringify(e),headers:{\"Content-Type\":\"application/json\"}})}a.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),function(e){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location.href).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var n=\"\".concat(\"\",\"/\").concat(\"service-worker.js\");h?(function(e,n){fetch(e).then(function(o){var t=o.headers.get(\"content-type\");404===o.status||null!=t&&-1===t.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):v(e,n)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(n,e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\")})):v(n,e)})}}(),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.pushManager?e.pushManager.getSubscription().then(function(n){null===n?(console.log(\"No subscription detected, make a request.\"),e.pushManager.subscribe({applicationServerKey:w,userVisibleOnly:!0}).then(function(e){console.log(\"New subscription added.\",e.toJSON()),b(e)}).catch(function(e){\"granted\"!==Notification.permission?console.log(\"Permission was not granted.\"):console.error(\"An error ocurred during the subscription process.\",e)})):(console.log(\"New subscription added.\",n.toJSON()),b(n))}):console.log(\"Push manager unavailable.\")}).catch(function(e){console.error(\"An error ocurred during Service Worker registration.\",e)})},6:function(e,n,o){e.exports=o.p+\"static/media/logo.5d5d9eef.svg\"},9:function(e,n,o){e.exports=o(17)}},[[9,1,2]]]);","extractedComments":[]}